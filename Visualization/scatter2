#!/usr/bin/env python3

import os, sys, csv
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt


_disciplines = list()
_dataset = '../dataset/athlete_events.csv'
_selector = ''
_sports = list()

def newSport(test):
    for sport in _sports:
        if sport == test:
            return False
    return True

def getDisciplines(csv):
    global _sports
    for line in csv['Sport']:
        if (newSport(line) == True):
            _sports.append(line)

def pickInfoFromDataset():
    try:
        with open(_dataset, 'r') as f:
            filtered_csv = pd.read_csv(_dataset, usecols=['Height', 'Weight', 'Sex' ,'Sport', 'Medal', 'Year'])
            getDisciplines(filtered_csv)
            f.close()
            return filtered_csv
    except:
        print(f'The program could not find the dataset.\nPlease make sure the archive has been unzipped, and that the dataset is located at the following path : \'{_dataset}\'')
        exit(1)

def printHelp():
    print('USAGE:')
    print(f'\tpython3 {sys.argv[0]} [Sport]\n')
    print('DEFINITION:')
    print('\tThis projetcs compares the height and weight of every Olympic athlete in every discipline. In order to only see a specific discipline, precise it as argument to the program.\n')
    print('EXAMPLE:')
    print(f'\t python3 {sys.argv[0]} Fencing\n')
    print(f'Here are every available disciplines :\n{sports}')

def parseArgs(size):
    global _selector
    if (size == 2 and not newSport(sys.argv[1])):
        _selector = sys.argv[1]
    else:
        printHelp()

def graphBuilder(coords, coordsW, sport, sex):
    Sex = 'male' if sex == 'M' else 'female'
    plt.plot(coords[0], coords[1], 'x', label='Contestant')
    plt.plot(coordsW[0], coordsW[1], 'x', label='Gold Medal')
    plt.title(f'Generic bodytypes of Olympic {sport} {Sex} athletes through time')
    plt.xlabel(f'Year')
    plt.ylabel(f'IMC of Olympic {sport} {Sex} athletes')
    if not os.path.exists('image'):
        os.makedirs('scatterImage')
    plt.savefig(f'scatterImage/ZZ_{sport}_{sex}.pdf')
    plt.close()

def builder(sport, csv, sex='M'):
    x_coord = list()
    y_coord = list()
    x_coordW = list()
    y_coordW = list()
    i = 0
    for i in range (len(csv['Sport'])):
        if (csv['Sport'][i] == sport and csv['Sex'][i] == sex):
            if (csv['Medal'][i] != 'Gold'):
                imc = csv['Weight'][i] / ((csv['Height'][i] / 100.0) ** 2)
                y_coord.append(imc)
                x_coord.append(csv['Year'][i])
            else:
                imc = csv['Weight'][i] / ((csv['Height'][i] / 100.0) ** 2)
                y_coordW.append(imc)
                x_coordW.append(csv['Year'][i])
    if (len(x_coord) == 0):
        print(f'No measurements given for {sex} {sport} athletes. Skipping.')
    else:
        graphBuilder([x_coord, y_coord], [x_coordW, y_coordW], sport, sex)
    if (sex == 'M'):
        builder(sport, csv, 'F')

def main():
    csv = pickInfoFromDataset()
    if len(sys.argv) != 1:
        parseArgs(len(sys.argv))
    if _selector != '':
        builder(_selector, csv)
    else:
        i = 1
        for sport in _sports:
            print(f'{sport} ({i}/{len(_sports)})')
            builder(sport, csv)
            i = i + 1

if __name__ == "__main__":
    main()
